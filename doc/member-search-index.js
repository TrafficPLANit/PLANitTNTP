memberSearchIndex = [{"p":"org.planit.tntp.input","c":"Tntp","l":"addBprParametersForLinkSegmentAndMode(LinkSegment, double, double)","url":"addBprParametersForLinkSegmentAndMode(org.planit.utils.network.physical.LinkSegment,double,double)"},{"p":"org.planit.tntp.enums","c":"NetworkFileColumns","l":"B"},{"p":"org.planit.tntp.input","c":"Tntp","l":"bprParametersForLinkSegmentAndMode"},{"p":"org.planit.tntp.output.formatter","c":"CSVOutputFormatter","l":"canHandleMultipleIterations()"},{"p":"org.planit.tntp.enums","c":"NetworkFileColumns","l":"CAPACITY_PER_LANE"},{"p":"org.planit.tntp.input","c":"Tntp","l":"capacityPeriod"},{"p":"org.planit.tntp.enums","c":"CapacityPeriod","l":"CapacityPeriod(double)","url":"%3Cinit%3E(double)"},{"p":"org.planit.tntp.test","c":"TNTPTest","l":"ChicagoSketchTest()"},{"p":"org.planit.tntp.input","c":"Tntp","l":"createAndRegisterLinkSegment(MacroscopicNetwork, Link, double, double, int, long, double, double)","url":"createAndRegisterLinkSegment(org.planit.network.physical.macroscopic.MacroscopicNetwork,org.planit.utils.network.physical.Link,double,double,int,long,double,double)"},{"p":"org.planit.tntp.input","c":"Tntp","l":"createAndRegisterNode(PhysicalNetwork, String[], NetworkFileColumns)","url":"createAndRegisterNode(org.planit.network.physical.PhysicalNetwork,java.lang.String[],org.planit.tntp.enums.NetworkFileColumns)"},{"p":"org.planit.tntp.enums","c":"NetworkFileColumns","l":"CRITICAL_SPEED"},{"p":"org.planit.tntp.output.formatter","c":"CSVOutputFormatter","l":"csvNameExtension"},{"p":"org.planit.tntp.output.formatter","c":"CSVOutputFormatter","l":"csvNameRoot"},{"p":"org.planit.tntp.output.formatter","c":"CSVOutputFormatter","l":"csvOutputDirectory"},{"p":"org.planit.tntp.output.formatter","c":"CSVOutputFormatter","l":"CSVOutputFormatter()","url":"%3Cinit%3E()"},{"p":"org.planit.tntp.enums","c":"CapacityPeriod","l":"DAY"},{"p":"org.planit.tntp","c":"TntpMain","l":"DEFAULT_CONVERGENCE_EPSILON"},{"p":"org.planit.tntp.test","c":"TNTPTestHelper","l":"DEFAULT_CONVERGENCE_EPSILON"},{"p":"org.planit.tntp","c":"TntpMain","l":"DEFAULT_MAX_ITERATIONS"},{"p":"org.planit.tntp.test","c":"TNTPTestHelper","l":"DEFAULT_MAX_ITERATIONS"},{"p":"org.planit.tntp","c":"TntpMain","l":"DEFAULT_MAXIMUM_SPEED"},{"p":"org.planit.tntp.test","c":"TNTPTestHelper","l":"DEFAULT_MAXIMUM_SPEED"},{"p":"org.planit.tntp.output.formatter","c":"CSVOutputFormatter","l":"DEFAULT_NAME_EXTENSION"},{"p":"org.planit.tntp.output.formatter","c":"CSVOutputFormatter","l":"DEFAULT_NAME_ROOT"},{"p":"org.planit.tntp.output.formatter","c":"CSVOutputFormatter","l":"DEFAULT_OUTPUT_DIRECTORY"},{"p":"org.planit.tntp.input","c":"Tntp","l":"defaultMaximumSpeed"},{"p":"org.planit.tntp.input","c":"Tntp","l":"demandFile"},{"p":"org.planit.tntp.enums","c":"NetworkFileColumns","l":"DOWNSTREAM_NODE_ID"},{"p":"org.planit.tntp.input","c":"Tntp","l":"END_OF_METADATA_INDICATOR"},{"p":"org.planit.tntp.test","c":"TNTPTestHelper","l":"execute(String, String, int, double, OutputTimeUnit, double)","url":"execute(java.lang.String,java.lang.String,int,double,org.planit.output.enums.OutputTimeUnit,double)"},{"p":"org.planit.tntp","c":"TntpMain","l":"execute(String, String, String, String, String, String, boolean, int, double, OutputTimeUnit, double)","url":"execute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int,double,org.planit.output.enums.OutputTimeUnit,double)"},{"p":"org.planit.tntp.enums","c":"LengthUnits","l":"FEET"},{"p":"org.planit.tntp.enums","c":"SpeedUnits","l":"FEET_MIN"},{"p":"org.planit.tntp.output.formatter","c":"CSVOutputFormatter","l":"finaliseAfterSimulation(Map<OutputType, OutputTypeConfiguration>)","url":"finaliseAfterSimulation(java.util.Map)"},{"p":"org.planit.tntp.enums","c":"NetworkFileColumns","l":"FREE_FLOW_TRAVEL_TIME"},{"p":"org.planit.tntp.output.formatter","c":"CSVOutputFormatter","l":"getCsvFileName(OutputType)","url":"getCsvFileName(org.planit.output.enums.OutputType)"},{"p":"org.planit.tntp.enums","c":"CapacityPeriod","l":"getMultiplier()"},{"p":"org.planit.tntp.enums","c":"LengthUnits","l":"getMultiplier()"},{"p":"org.planit.tntp.enums","c":"SpeedUnits","l":"getMultiplier()"},{"p":"org.planit.tntp.enums","c":"TimeUnits","l":"getMultiplier()"},{"p":"org.planit.tntp.enums","c":"CapacityPeriod","l":"HOUR"},{"p":"org.planit.tntp.enums","c":"TimeUnits","l":"HOURS"},{"p":"org.planit.tntp.output.formatter","c":"CSVOutputFormatter","l":"initialiseBeforeSimulation(Map<OutputType, OutputTypeConfiguration>, long)","url":"initialiseBeforeSimulation(java.util.Map,long)"},{"p":"org.planit.tntp.enums","c":"LengthUnits","l":"KM"},{"p":"org.planit.tntp.enums","c":"SpeedUnits","l":"KM_H"},{"p":"org.planit.tntp.enums","c":"NetworkFileColumns","l":"LENGTH"},{"p":"org.planit.tntp.input","c":"Tntp","l":"lengthUnits"},{"p":"org.planit.tntp.enums","c":"LengthUnits","l":"LengthUnits(double)","url":"%3Cinit%3E(double)"},{"p":"org.planit.tntp.enums","c":"NetworkFileColumns","l":"LINK_TYPE"},{"p":"org.planit.tntp.input","c":"Tntp","l":"linkSegments"},{"p":"org.planit.tntp","c":"TntpMain","l":"LOGGER"},{"p":"org.planit.tntp.input","c":"Tntp","l":"LOGGER"},{"p":"org.planit.tntp.output.formatter","c":"CSVOutputFormatter","l":"LOGGER"},{"p":"org.planit.tntp.test","c":"TNTPTest","l":"LOGGER"},{"p":"org.planit.tntp.test","c":"TNTPTestHelper","l":"LOGGER"},{"p":"org.planit.tntp.enums","c":"LengthUnits","l":"M"},{"p":"org.planit.tntp.enums","c":"SpeedUnits","l":"M_SEC"},{"p":"org.planit.tntp","c":"TntpMain","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"org.planit.tntp.enums","c":"NetworkFileColumns","l":"MAXIMUM_SPEED"},{"p":"org.planit.tntp.enums","c":"LengthUnits","l":"MILES"},{"p":"org.planit.tntp.enums","c":"SpeedUnits","l":"MILES_H"},{"p":"org.planit.tntp.enums","c":"TimeUnits","l":"MINUTES"},{"p":"org.planit.tntp.input","c":"Tntp","l":"mode"},{"p":"org.planit.tntp.enums","c":"CapacityPeriod","l":"multiplier"},{"p":"org.planit.tntp.enums","c":"LengthUnits","l":"multiplier"},{"p":"org.planit.tntp.enums","c":"SpeedUnits","l":"multiplier"},{"p":"org.planit.tntp.enums","c":"TimeUnits","l":"multiplier"},{"p":"org.planit.tntp.input","c":"Tntp","l":"networkFile"},{"p":"org.planit.tntp.input","c":"Tntp","l":"networkFileColumns"},{"p":"org.planit.tntp.enums","c":"NetworkFileColumns","l":"NetworkFileColumns()","url":"%3Cinit%3E()"},{"p":"org.planit.tntp.input","c":"Tntp","l":"nodeCoordinateFile"},{"p":"org.planit.tntp.input","c":"Tntp","l":"noLinks"},{"p":"org.planit.tntp.input","c":"Tntp","l":"noPhysicalNodes"},{"p":"org.planit.tntp.input","c":"Tntp","l":"notify(EventInterface)","url":"notify(org.djutils.event.EventInterface)"},{"p":"org.planit.tntp.input","c":"Tntp","l":"noZones"},{"p":"org.planit.tntp.enums","c":"NetworkFileColumns","l":"NUMBER_OF_LANES"},{"p":"org.planit.tntp.input","c":"Tntp","l":"NUMBER_OF_LINKS_INDICATOR"},{"p":"org.planit.tntp.input","c":"Tntp","l":"NUMBER_OF_NODES_INDICATOR"},{"p":"org.planit.tntp.input","c":"Tntp","l":"NUMBER_OF_ZONES_INDICATOR"},{"p":"org.planit.tntp.input","c":"Tntp","l":"ONE_WAY_AB"},{"p":"org.planit.tntp.input","c":"Tntp","l":"ONE_WAY_BA"},{"p":"org.planit.tntp.input","c":"Tntp","l":"parseFromHeader(String, String)","url":"parseFromHeader(java.lang.String,java.lang.String)"},{"p":"org.planit.tntp.test","c":"TNTPTestHelper","l":"parseStandardResultsFile(String)","url":"parseStandardResultsFile(java.lang.String)"},{"p":"org.planit.tntp.input","c":"Tntp","l":"planitGeoUtils"},{"p":"org.planit.tntp.input","c":"Tntp","l":"populateDemands(Demands, Object)","url":"populateDemands(org.planit.demands.Demands,java.lang.Object)"},{"p":"org.planit.tntp.input","c":"Tntp","l":"populatePhysicalCost(PhysicalCost)","url":"populatePhysicalCost(org.planit.cost.physical.PhysicalCost)"},{"p":"org.planit.tntp.input","c":"Tntp","l":"populatePhysicalNetwork(PhysicalNetwork)","url":"populatePhysicalNetwork(org.planit.network.physical.PhysicalNetwork)"},{"p":"org.planit.tntp.input","c":"Tntp","l":"populateZoning(Zoning, Object)","url":"populateZoning(org.planit.network.virtual.Zoning,java.lang.Object)"},{"p":"org.planit.tntp.enums","c":"NetworkFileColumns","l":"POWER"},{"p":"org.planit.tntp.output.formatter","c":"CSVOutputFormatter","l":"printer"},{"p":"org.planit.tntp.input","c":"Tntp","l":"readLinkData(MacroscopicNetwork, String, long)","url":"readLinkData(org.planit.network.physical.macroscopic.MacroscopicNetwork,java.lang.String,long)"},{"p":"org.planit.tntp.input","c":"Tntp","l":"readNetworkMetadata(String)","url":"readNetworkMetadata(java.lang.String)"},{"p":"org.planit.tntp.enums","c":"TimeUnits","l":"SECONDS"},{"p":"org.planit.tntp.input","c":"Tntp","l":"serialVersionUID"},{"p":"org.planit.tntp.output.formatter","c":"CSVOutputFormatter","l":"setCsvDirectory(String)","url":"setCsvDirectory(java.lang.String)"},{"p":"org.planit.tntp.output.formatter","c":"CSVOutputFormatter","l":"setCsvNameExtension(String)","url":"setCsvNameExtension(java.lang.String)"},{"p":"org.planit.tntp.output.formatter","c":"CSVOutputFormatter","l":"setCsvNameRoot(String)","url":"setCsvNameRoot(java.lang.String)"},{"p":"org.planit.tntp.test","c":"TNTPTest","l":"setUp()"},{"p":"org.planit.tntp.input","c":"Tntp","l":"speedUnits"},{"p":"org.planit.tntp.enums","c":"SpeedUnits","l":"SpeedUnits(double)","url":"%3Cinit%3E(double)"},{"p":"org.planit.tntp.test","c":"TNTPTest","l":"tearDown()"},{"p":"org.planit.tntp.input","c":"Tntp","l":"timePeriod"},{"p":"org.planit.tntp.enums","c":"TimeUnits","l":"TimeUnits(double)","url":"%3Cinit%3E(double)"},{"p":"org.planit.tntp.input","c":"Tntp","l":"Tntp(String, String, Map<NetworkFileColumns, Integer>, SpeedUnits, LengthUnits, CapacityPeriod, double)","url":"%3Cinit%3E(java.lang.String,java.lang.String,java.util.Map,org.planit.tntp.enums.SpeedUnits,org.planit.tntp.enums.LengthUnits,org.planit.tntp.enums.CapacityPeriod,double)"},{"p":"org.planit.tntp.input","c":"Tntp","l":"Tntp(String, String, Map<NetworkFileColumns, Integer>, SpeedUnits, LengthUnits, double)","url":"%3Cinit%3E(java.lang.String,java.lang.String,java.util.Map,org.planit.tntp.enums.SpeedUnits,org.planit.tntp.enums.LengthUnits,double)"},{"p":"org.planit.tntp.input","c":"Tntp","l":"Tntp(String, String, String, Map<NetworkFileColumns, Integer>, SpeedUnits, LengthUnits, CapacityPeriod, double)","url":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.planit.tntp.enums.SpeedUnits,org.planit.tntp.enums.LengthUnits,org.planit.tntp.enums.CapacityPeriod,double)"},{"p":"org.planit.tntp.input","c":"Tntp","l":"Tntp(String, String, String, String, Map<NetworkFileColumns, Integer>, SpeedUnits, LengthUnits, double)","url":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.planit.tntp.enums.SpeedUnits,org.planit.tntp.enums.LengthUnits,double)"},{"p":"org.planit.tntp","c":"TntpMain","l":"TntpMain()","url":"%3Cinit%3E()"},{"p":"org.planit.tntp.project","c":"TntpProject","l":"TntpProject(String, String, Map<NetworkFileColumns, Integer>, SpeedUnits, LengthUnits, CapacityPeriod, double)","url":"%3Cinit%3E(java.lang.String,java.lang.String,java.util.Map,org.planit.tntp.enums.SpeedUnits,org.planit.tntp.enums.LengthUnits,org.planit.tntp.enums.CapacityPeriod,double)"},{"p":"org.planit.tntp.project","c":"TntpProject","l":"TntpProject(String, String, String, Map<NetworkFileColumns, Integer>, SpeedUnits, LengthUnits, CapacityPeriod, double)","url":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.planit.tntp.enums.SpeedUnits,org.planit.tntp.enums.LengthUnits,org.planit.tntp.enums.CapacityPeriod,double)"},{"p":"org.planit.tntp.project","c":"TntpProject","l":"TntpProject(Tntp)","url":"%3Cinit%3E(org.planit.tntp.input.Tntp)"},{"p":"org.planit.tntp.test","c":"TNTPTest","l":"TNTPTest()","url":"%3Cinit%3E()"},{"p":"org.planit.tntp.test","c":"TNTPTestHelper","l":"TNTPTestHelper()","url":"%3Cinit%3E()"},{"p":"org.planit.tntp.enums","c":"NetworkFileColumns","l":"TOLL"},{"p":"org.planit.tntp.input","c":"Tntp","l":"TWO_WAY"},{"p":"org.planit.tntp.input","c":"Tntp","l":"updateNodeCoordinatesFromFile(PhysicalNetwork)","url":"updateNodeCoordinatesFromFile(org.planit.network.physical.PhysicalNetwork)"},{"p":"org.planit.tntp.input","c":"Tntp","l":"updateOdDemandMatrix(Map<Integer, Double>, Zoning, Zone, ODDemandMatrix)","url":"updateOdDemandMatrix(java.util.Map,org.planit.network.virtual.Zoning,org.planit.utils.network.virtual.Zone,org.planit.od.odmatrix.demand.ODDemandMatrix)"},{"p":"org.planit.tntp.enums","c":"NetworkFileColumns","l":"UPSTREAM_NODE_ID"},{"p":"org.planit.tntp.enums","c":"CapacityPeriod","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.planit.tntp.enums","c":"LengthUnits","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.planit.tntp.enums","c":"NetworkFileColumns","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.planit.tntp.enums","c":"SpeedUnits","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.planit.tntp.enums","c":"TimeUnits","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.planit.tntp.enums","c":"CapacityPeriod","l":"values()"},{"p":"org.planit.tntp.enums","c":"LengthUnits","l":"values()"},{"p":"org.planit.tntp.enums","c":"NetworkFileColumns","l":"values()"},{"p":"org.planit.tntp.enums","c":"SpeedUnits","l":"values()"},{"p":"org.planit.tntp.enums","c":"TimeUnits","l":"values()"},{"p":"org.planit.tntp.output.formatter","c":"CSVOutputFormatter","l":"writeGeneralResultsForCurrentTimePeriod(OutputConfiguration, OutputTypeConfiguration, OutputTypeEnum, OutputAdapter, Set<Mode>, TimePeriod, int)","url":"writeGeneralResultsForCurrentTimePeriod(org.planit.output.configuration.OutputConfiguration,org.planit.output.configuration.OutputTypeConfiguration,org.planit.output.enums.OutputTypeEnum,org.planit.output.adapter.OutputAdapter,java.util.Set,org.planit.time.TimePeriod,int)"},{"p":"org.planit.tntp.output.formatter","c":"CSVOutputFormatter","l":"writeLinkResultsForCurrentTimePeriod(OutputConfiguration, OutputTypeConfiguration, OutputTypeEnum, OutputAdapter, Set<Mode>, TimePeriod, int)","url":"writeLinkResultsForCurrentTimePeriod(org.planit.output.configuration.OutputConfiguration,org.planit.output.configuration.OutputTypeConfiguration,org.planit.output.enums.OutputTypeEnum,org.planit.output.adapter.OutputAdapter,java.util.Set,org.planit.time.TimePeriod,int)"},{"p":"org.planit.tntp.output.formatter","c":"CSVOutputFormatter","l":"writeOdResultsForCurrentTimePeriod(OutputConfiguration, OutputTypeConfiguration, OutputTypeEnum, OutputAdapter, Set<Mode>, TimePeriod, int)","url":"writeOdResultsForCurrentTimePeriod(org.planit.output.configuration.OutputConfiguration,org.planit.output.configuration.OutputTypeConfiguration,org.planit.output.enums.OutputTypeEnum,org.planit.output.adapter.OutputAdapter,java.util.Set,org.planit.time.TimePeriod,int)"},{"p":"org.planit.tntp.output.formatter","c":"CSVOutputFormatter","l":"writePathResultsForCurrentTimePeriod(OutputConfiguration, OutputTypeConfiguration, OutputTypeEnum, OutputAdapter, Set<Mode>, TimePeriod, int)","url":"writePathResultsForCurrentTimePeriod(org.planit.output.configuration.OutputConfiguration,org.planit.output.configuration.OutputTypeConfiguration,org.planit.output.enums.OutputTypeEnum,org.planit.output.adapter.OutputAdapter,java.util.Set,org.planit.time.TimePeriod,int)"},{"p":"org.planit.tntp.output.formatter","c":"CSVOutputFormatter","l":"writeSimulationResultsForCurrentTimePeriod(OutputConfiguration, OutputTypeConfiguration, OutputTypeEnum, OutputAdapter, Set<Mode>, TimePeriod, int)","url":"writeSimulationResultsForCurrentTimePeriod(org.planit.output.configuration.OutputConfiguration,org.planit.output.configuration.OutputTypeConfiguration,org.planit.output.enums.OutputTypeEnum,org.planit.output.adapter.OutputAdapter,java.util.Set,org.planit.time.TimePeriod,int)"}]